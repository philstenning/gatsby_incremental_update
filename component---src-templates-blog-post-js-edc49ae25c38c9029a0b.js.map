{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.jsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_exports__","_ref","post","data","markdownRemark","console","log","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","m","module","exports","require","default","React","createContext","PropTypes","object","string","isRequired","func","__webpack_require__","d","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","_ref2","children","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","css","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","site","siteMetadata","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","propTypes","shape"],"mappings":"gKAGeA,EAAA,iBAAAC,GAAc,IACrBC,EADqBD,EAAXE,KACEC,eAElB,OADAC,QAAQC,IAAIJ,GAEVK,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,UAAKL,EAAKQ,YAAYC,OACtBJ,OAAAC,EAAA,EAAAD,CAAA,OAAKK,wBAAyB,CAAEC,OAAQX,EAAKY,WAM9C,IAAMC,EAAK,iCChBlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,uICapBK,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,uCC1DtBC,EAAAC,EAAA7B,EAAA,sBAAA8B,IAAA,IAAAC,EAAAH,EAAA,KAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAGME,EAAa,IAAIC,IAAWC,KAGrBR,EAASM,EAAWN,+HCAlB9B,EAAA,WAAAuC,GAAkB,IAAfC,EAAeD,EAAfC,SACVrC,EAAOsC,EAAAtC,KAYb,OACEI,OAAAC,EAAA,EAAAD,CAAA,OACEmC,IAAKA,YAAF,yCAGUZ,YAAO,GAHjB,gBAIcA,YAAO,KAJrB,MAOHvB,OAAAC,EAAA,EAAAD,CAACoC,EAAA,EAAD,CAAMC,GAAE,KACNrC,OAAAC,EAAA,EAAAD,CAAA,MACEmC,IAAKA,YAAF,iBACgBZ,YAAO,GADvB,6CAMF3B,EAAK0C,KAAKC,aAAanC,QAG5BJ,OAAAC,EAAA,EAAAD,CAACoC,EAAA,EAAD,CACEC,GAAE,UACFF,IAAGzC,GAFL,SAQCuC,2LCzCDO,EAAmB,SAAA9C,GAAkB,IAAf+C,EAAe/C,EAAf+C,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIE5B,IAAMgC,cAAcC,IAApB/C,OAAAgD,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBU,UAAY,CAC3BT,SAAUzB,IAAUmC,MAAM,CACxBN,SAAU7B,IAAUE,OAAOC,aAC1BA,YAGUqB","file":"component---src-templates-blog-post-js-edc49ae25c38c9029a0b.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nexport default ({ data }) => {\r\n  const post = data.markdownRemark\r\n  console.log(post)\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1>{post.frontmatter.title}</h1>\r\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\r\nimport kirkhamTheme from \"typography-theme-kirkham\"\r\n\r\nconst typography = new Typography(kirkhamTheme)\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\n","import React from \"react\"\r\nimport { css } from \"@emotion/core\"\r\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nexport default ({ children }) => {\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  return (\r\n    <div\r\n      css={css`\r\n        margin: 0 auto;\r\n        max-width: 700px;\r\n        padding: ${rhythm(2)};\r\n        padding-top: ${rhythm(1.5)};\r\n      `}\r\n    >\r\n      <Link to={`/`}>\r\n        <h3\r\n          css={css`\r\n            margin-bottom: ${rhythm(2)};\r\n            display: inline-block;\r\n            font-style: normal;\r\n          `}\r\n        >\r\n          {data.site.siteMetadata.title}\r\n        </h3>\r\n      </Link>\r\n      <Link\r\n        to={`/about/`}\r\n        css={css`\r\n          float: right;\r\n        `}\r\n      >\r\n        About\r\n      </Link>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}